version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: php_dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    depends_on:
      - mysql
    tty: true
    expose:
      - "9000"
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./html:/var/www
      #- ./php:/usr/local/etc/php
    networks:
      - app-network

  #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: nginx_dockerfile
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./html:/var/www
      #- ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network


  #MySQL Service
  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    expose:
      - "3306"
    #ports:
    #  - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel_pw
      MYSQL_ROOT_PASSWORD: jasongroup
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      #- ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - app-network
      
  #elasticsearch
  elasticsearch:
    container_name: elasticsearch
    build:
      context: .
      dockerfile: elasticsearch_dockerfile
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network
      
  # 형태소 분석기
  lexical:
    container_name: lexical
    build:
      context: .
      dockerfile: lexical_dockerfile
    ports:
      - "5000:5000"
    networks:
      - app-network
      
#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local